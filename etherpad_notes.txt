D-lab advanced R workshop
November 12, 2013
Please enter your name on the right. Feel free to add in any notes here that  might be helpful to the class. I'll share these notes with everyone at the end.
 

01-acquiring data from the web
========================

link to API: http://openfisheries.org/api-info

What functions should we write?
three functions. One for landings, one for species, one for countries

countries <- function() {
    
    }
 
 species <- function() {
     
     }
  
  landings <- function(country = , species = ) {
      
      }
      
      

      
            
How many functions should we write?

Three functions (landings, countries, species)

What should these functions return?

02 Writing a test suite
=====================


Before we write the functions, let's write some unit tests using the expect_that() set of functions.

      landings_data <- landings()
      landings_by_country <- landings(country = "USA")
      species_list <- species()
      
      # tests to write
    
expect_that(ncol(landings) == 2, is_true()) ; 
expect_that(ncol(landings), equals(2))
expect_that(countries, is_a("character"))
expect_that(countries, is_a("data.frame"))
      

How do we accurately determine that these functions do what we expect?

library(testthat)
context("This related to countries and species")

test_that("Ensuring that country codes are a data.frame with two columns", {
          landings_data <- landings()
      landings_by_country <- landings(country = "USA")
      species_list <- species()

      expect_that(ncol(landings_data) == 2, is_true()) ; 
        expect_that(ncol(landings_data), equals(2))
        expect_that(landings_data, is_a("data.frame"))
        expect_that(countries, is_a("character"))
        expect_that(countries, is_a("data.frame"))
      
})



=====================

Writing the functions.
=====================

landings <- function(...) {
        url <- "http://openfisheries.org/api/landings"
        data <- suppressWarnings(getForm(url, .params = list(...)))
        data <- fromJSON(I(data))
        landings_data <- as.data.frame(do.call(rbind, data))
}
landings_data <- landings()

# Better function


landings <- function(species = NA, country = NA, ...) {

base_url <- "http://openfisheries.org/api/landings"

        if(is.na(species) && is.na(country)) {
        url <- base_url
        }

        if(!is.na(country) && is.na(species)) {
                # country
         url <- paste(base_url, "/countries/", country, sep = "")
        }

        if(!is.na(species) && is.na(country)) {
         url <- paste(base_url, "/species/", species, sep = "")
        }


        data <- suppressWarnings(getForm(url, .params = list(...)))
        data <- fromJSON(I(data))
        landings_data <- as.data.frame(do.call(rbind, data))
}


03 Documenting the functions
=====================


#' Function to get landings data 
#'
#' Function retrieves landings data as aggregate, by country, or by species
#'
#' @param species A three letter international species code
#' @param country A three letter iso3 country code
#' @param ... Optional arguments
#'
#' @return data.frame
#' @export
#' @importFrom RJSONIO fromJSON
#' @importFrom RCurl getForm
#' 
#' @examples \dontrun{
#' # Get global landings data
#' data <- landings()
#' # Get data for a particular country
#' usa <- landings(country = "USA")
#' # Get data for a particular species
#' cod <- landings(species = "COD")
#' }

landings <- function(species = NA, country = NA, ...) {

base_url <- "http://openfisheries.org/api/landings"

        if(is.na(species) && is.na(country)) {
        url <- base_url
        }

        if(!is.na(country) && is.na(species)) {
                # country
         url <- paste(base_url, "/countries/", country, sep = "")
        }

        if(!is.na(species) && is.na(country)) {
         url <- paste(base_url, "/species/", species, sep = "")
        }


        data <- suppressWarnings(getForm(url, .params = list(...)))
        data <- fromJSON(I(data))
        landings_data <- as.data.frame(do.call(rbind, data))
}

https://dl.dropboxusercontent.com/u/2223411/dlab.zip


04 Packaging the functions
=====================

The Description file

Package: dlab
Title: 
Description: 
Version: 0.1
Authors@R: 'Karthik Ram <karthik.ram@gmail.com> [aut, cre]'
Depends:
    R (>= 3.0.2)
License: CC0
LazyData: true
Imports:
    RCurl,
    RJSONIO
Collate:
    'landings.R'





